{"version":3,"sources":["reportWebVitals.js","actiontypes/index.js","actions/index.js","components/SelectField/index.js","components/Header/marte.png","components/Header/index.js","components/InputField/index.js","components/DateField/index.js","components/Searchbox/index.js","components/Photo/index.js","components/Photos/index.js","components/Loader/index.js","components/Message/index.js","hooks/InfiniteScroll.js","App.js","reducers/index.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_PHOTOS_START","GET_PHOTOS_SUCCES","GET_PHOTOS_ERROR","SAVE_SEARCH_SUCCESS","CLEAR_ALL_SEARCHES_SUCCESS","getPhotos","dispatch","filterParams","a","query","api_key","rover","page","type","fetch","QueryString","stringify","result","status","statusText","json","response","photos","completedPhotosList","length","firstPage","parseInt","error","SelectField","options","label","secondary","value","onChange","classNameValue","className","target","map","o","index","key","name","roverOptions","Header","history","clearFilters","useDispatch","filters","parse","location","search","href","onClick","src","MarsLogo","height","width","alt","push","searchName","window","prompt","randomId","toString","saveSearch","id","InputField","DateField","valueFormatted","year","Date","getFullYear","month","getMonth","day","getDate","cameras","Searchbox","savedSearches","handleChangeFilter","sol","bind","camera","earth_date","s","searchId","savedSearch","find","savedSearchFilters","confirm","clearAllSearches","Photo","photo","landing_date","launch_date","formattedLandingDate","toLocaleDateString","formattedLaunchDate","img_src","Photos","list","Loader","Message","text","classNameValues","danger","useInfiniteScroll","callback","useState","isFetching","setIsFetching","handleScroll","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","addEventListener","removeEventListener","withRouter","useLocation","useSelector","store","loading","setTimeout","currentPage","updatedFilters","initialFilters","initialState","Immutable","JSON","localStorage","getItem","createStore","state","action","updatedPhotos","merge","updatedSearches","setItem","removeItem","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e65532ba.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n            import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","//photos\nexport const GET_PHOTOS_START = 'GET_PHOTOS_START';\nexport const GET_PHOTOS_SUCCES = 'GET_PHOTOS_SUCCES';\nexport const GET_PHOTOS_ERROR = 'GET_PHOTOS_ERROR';\n\n//saved searches\nexport const SAVE_SEARCH_SUCCESS = 'SAVE_SEARCH_SUCCESS';\nexport const CLEAR_ALL_SEARCHES_SUCCESS = 'CLEAR_ALL_SEARCHES_SUCCESS';\n","import QueryString from 'query-string';\nimport {\n    GET_PHOTOS_START,\n    GET_PHOTOS_SUCCES,\n    GET_PHOTOS_ERROR,\n    SAVE_SEARCH_SUCCESS,\n    CLEAR_ALL_SEARCHES_SUCCESS\n} from '../actiontypes/index';\n\nconst url = 'https://api.nasa.gov/mars-photos/api/v1/rovers';\nconst apiKey = '2AKoz9U2oRHriOMf7IYEgJVrhagwKNAeCbCC6AsT';\n// const apiKey = 'DEMO_KEY';\n\nconst getPhotos = async (dispatch, filterParams) => {\n\n    let query = {...filterParams, api_key: apiKey};\n\n    const rover = query.rover;\n    delete query.rover;\n\n    if (!query.page) {\n        query.page = 1;\n    }\n\n    try {\n        dispatch({\n            type: GET_PHOTOS_START\n        });\n        const result = await fetch(`${url}/${rover}/photos?${QueryString.stringify(query)}`);\n        if (result.status >= 400 && result.status < 600) {\n            throw result.statusText;\n        }\n        const response = await result.json();\n\n        dispatch({\n            type: GET_PHOTOS_SUCCES,\n            photos: response.photos,\n            completedPhotosList: response.photos?.length < 25,\n            firstPage: parseInt(query.page) === 1\n        });\n    } catch(error) {\n        dispatch({\n            type: GET_PHOTOS_ERROR,\n            error: `${error}, please try again`\n        });\n        throw error;\n    };\n}\n\nconst saveSearch = (dispatch, search) => {\n    dispatch({\n        type: SAVE_SEARCH_SUCCESS,\n        search\n    });\n};\n\nconst clearAllSearches = (dispatch) => {\n    dispatch({\n        type: CLEAR_ALL_SEARCHES_SUCCESS\n    });\n};\n\nexport {\n    getPhotos,\n    saveSearch,\n    clearAllSearches\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './selectField.scss';\n\nconst SelectField = ({options, label, secondary, value, onChange}) => {\n\n    const handleChange = ({target: {value}}) => onChange(value);\n\n    const classNameValue = secondary? 'select-content secondary': 'select-content';\n\n    return (\n        <div className={classNameValue}>\n            {label && <label>{label}</label>}\n            <select value={value} onChange={handleChange}>\n                { value === '' && <option value={'empty'} key={'empty'}>{'Select an option...'}</option>}\n                {\n                    options.map((o, index) => <option value={o.key} key={index}>{o.name}</option>)\n                }\n            </select>\n        </div>\n    )\n};\n\nSelectField.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.object).isRequired,\n    label: PropTypes.string,\n    secondary: PropTypes.bool,\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default SelectField;\n","export default __webpack_public_path__ + \"static/media/marte.aa5e4619.png\";","import React from 'react';\nimport QueryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from 'react-redux';\n\nimport {saveSearch} from '../../actions';\nimport SelectField from '../SelectField';\nimport MarsLogo from './marte.png';\n\nimport './header.scss';\n\nconst roverOptions = [\n    {\n        key: 'curiosity',\n        name: 'Curiosity'\n    },\n    {\n        key: 'opportunity',\n        name: 'Opportunity'\n    },\n    {\n        key: 'spirit',\n        name: 'Spirit'\n    }\n];\n\nconst Header = ({history, clearFilters}) => {\n\n    const dispatch = useDispatch();\n\n    let filters = QueryString.parse(history.location.search);\n\n    const handleChangeRover = (rover) => {\n        filters = {...filters, rover, page: 1};\n        history.push(`?${QueryString.stringify(filters)}`);\n    };\n\n    const handleSaveCurrentSearch = () => {\n        const searchName = window.prompt('Please enter a search name, otherwise search wont be saved');\n        if (searchName) {\n            const filtersToSave = QueryString.stringify(filters);\n            const randomId = filtersToSave.toString(); //use as unique id\n            saveSearch(dispatch, {\n                searchName,\n                id: randomId,\n                filters: QueryString.stringify(filters)\n            });\n        }\n    }\n\n    return (\n        <div className=\"header\">\n            <a href=\"#\" className=\"logo\" onClick={clearFilters}>\n                <img src={MarsLogo} height=\"50\" width=\"50\" alt=\"Mars logo\"/>\n                <h2>Rover Mars</h2>\n            </a>\n            <section className=\"main-filters\">\n                <SelectField\n                    options={roverOptions}\n                    value={filters.rover? filters.rover : ''}\n                    onChange={handleChangeRover}\n                />\n                <button onClick={handleSaveCurrentSearch}>\n                    Save Current Search\n                </button>\n            </section>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    clearFilters: PropTypes.func.isRequired\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './inputField.scss';\n\nconst InputField = ({label, type, value, onChange}) => {\n\n    const handleChange = ({target: {value}}) => onChange(value);\n\n    return (\n        <div className=\"input-content\">\n            {label && <label>{label}</label>}\n            <input type={type} value={value} onChange={handleChange}/>\n        </div>\n    )\n};\n\nInputField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default InputField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './dateField.scss';\n\nconst DateField = ({label, value, onChange}) => {\n\n    let valueFormatted = '';\n    if (value) {\n        value = new Date(value);\n        let year = value.getFullYear();\n        let month = value.getMonth() + 1 < 10 ? `0${value.getMonth()+1}` : value.getMonth()+1;\n        let day = value.getDate() < 10 ? `0${value.getDate()}` : value.getDate();\n        valueFormatted = `${year}-${month}-${day}`;\n    }\n\n    const handleChange = ({target: {value}}) => onChange(value);\n\n    return (\n        <div className=\"date-content\">\n            {label && <label>{label}</label>}\n            <input\n                type=\"date\"\n                value={valueFormatted}\n                onChange={handleChange}\n            />\n        </div>\n    )\n}\n\nDateField.propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([\n        PropTypes.string\n    ]),\n    onChange: PropTypes.func.isRequired\n};\n\nexport default DateField;\n","import React from 'react'\nimport QueryString from 'query-string';\nimport {useDispatch} from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport SelectField from '../SelectField';\nimport InputField from '../InputField';\nimport DateField from '../DateField';\nimport {clearAllSearches} from '../../actions';\n\nimport './searchbox.scss';\n\nconst cameras = [\n    {\n        key: 'FHAZ',\n        name: 'Front Hazard Avoidance Camera'\n    },\n    {\n        key: 'RHAZ',\n        name: 'Rear Hazard Avoidance Camera'\n    },\n    {\n        key: 'MAST',\n        name: 'Mast Camera'\n    },\n    {\n        key: 'CHEMCAM',\n        name: '\tChemistry and Camera Complex'\n    },\n    {\n        key: 'MAHLI',\n        name: 'Mars Hand Lens Imager'\n    },\n    {\n        key: 'MARDI',\n        name: 'Mars Descent Imager'\n    },\n    {\n        key: 'NAVCAM',\n        name: 'Navigation Camera'\n    },\n    {\n        key: 'PANCAM',\n        name: 'Panoramic Camera'\n    },\n    {\n        key: 'MINITES',\n        name: 'Miniature Thermal Emission Spectrometer (Mini-TES)'\n    }\n];\n\nconst Searchbox = ({history, savedSearches}) => {\n\n    const dispatch = useDispatch();\n\n    let filters = QueryString.parse(history.location.search);\n\n    const handleChangeFilter = (name, value) => {\n        filters = {...filters, [name]: value, page: 1};\n        history.push(`?${QueryString.stringify(filters)}`);\n    };\n\n    const handleSelectSavedSearch = (searchId) => {\n        const savedSearch = savedSearches.find(s => s.id === searchId);\n        const savedSearchFilters = QueryString.parse(savedSearch.filters);\n        history.push(`?${QueryString.stringify(savedSearchFilters)}`);\n    };\n\n    const handleClearAllSearches = () => {\n        let proceed = window.confirm('Are you sure you want delete all searches?');\n        if (proceed) {\n            clearAllSearches(dispatch);\n        }\n    }\n\n    return (\n        <div className=\"searchbox\">\n            <h1>Mars Rover Photos</h1>\n            <section className=\"filters\">\n                <InputField\n                    options={cameras}\n                    secondary\n                    label='Select Sol Date'\n                    value={filters.sol}\n                    type=\"number\"\n                    onChange={handleChangeFilter.bind(this, 'sol')}\n                />\n                <SelectField\n                    options={cameras}\n                    secondary\n                    label='Select Camera'\n                    value={filters.camera? filters.camera : ''}\n                    onChange={handleChangeFilter.bind(this, 'camera')}\n                />\n                <DateField\n                    label='Select Earth Day'\n                    onChange={handleChangeFilter.bind(this, 'earth_date')}\n                    value={filters.earth_date}\n                />\n            </section>\n            <section className=\"saved-searches\">\n                <SelectField\n                    options={savedSearches.map(s => ({...s, key: s.id, name: s.searchName}))}\n                    secondary\n                    label='Saved Searches'\n                    value={QueryString.stringify(filters)? QueryString.stringify(filters): ''}\n                    onChange={handleSelectSavedSearch.bind(this)}\n                />\n                <button onClick={handleClearAllSearches}>\n                    Clear All Searches\n                </button>\n            </section>\n        </div>\n    )\n};\n\nSearchbox.propTypes = {\n    savedSearches: PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default Searchbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './photo.scss';\n\nconst Photo = ({photo}) => {\n    const {rover: {landing_date, launch_date}} = photo;\n    const formattedLandingDate = landing_date? (new Date(landing_date)).toLocaleDateString() : '-';\n    const formattedLaunchDate = launch_date? (new Date(launch_date)).toLocaleDateString() : '-';\n\n    return (\n        <div className=\"photo\">\n            <img src={photo.img_src} alt=\"Rover\"/>\n            <div className=\"description\">\n                <strong>Landing Date:</strong>&nbsp;{formattedLandingDate}<br/>\n                <strong>Launch Date:</strong>&nbsp;{formattedLaunchDate}<br/>\n            </div>\n        </div>\n    )\n};\n\nPhoto.propTypes = {\n    photo: PropTypes.object\n}\n\nexport default Photo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Photo from '../Photo';\n\nimport './photos.scss';\n\nconst Photos = ({list}) => {\n    return (\n        <div className='photos'>\n            {\n                list.map(photo => <Photo photo={photo} key={photo.id}/>)\n            }\n        </div>\n    )\n}\n\nPhotos.propTypes = {\n    list: PropTypes.arrayOf(PropTypes.object).isRequired\n}\n\nexport default Photos;\n","import React from 'react';\nimport './loader.scss';\n\nconst Loader = () => <div className=\"loader\"/>;\n\nexport default Loader;\n","import React from 'react';\nimport './message.scss';\n\nconst Message = ({text, danger}) => {\n    let classNameValues =  'message';\n    if (danger) {\n        classNameValues = `${classNameValues} danger`\n    }\n    return <div className={classNameValues}><h3>{text}</h3></div>;\n};\n\nexport default Message;\n","import { useState, useEffect } from 'react';\n\nconst useInfiniteScroll = (callback) => {\n    const [isFetching, setIsFetching] = useState(false);\n\n    const handleScroll = () => {\n        if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || isFetching) return;\n        setIsFetching(true);\n    }\n\n    useEffect(() => {\n        window.addEventListener('scroll', handleScroll);\n        return () => window.removeEventListener('scroll', handleScroll);\n    }, []);\n\n    useEffect(() => {\n        if (!isFetching) return;\n        callback();\n    }, [isFetching]);\n\n    return [isFetching, setIsFetching];\n};\n\nexport default useInfiniteScroll;\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport QueryString from 'query-string';\nimport { withRouter } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Searchbox from './components/Searchbox';\nimport Photos from './components/Photos';\nimport Loader from './components/Loader';\nimport Message from './components/Message';\nimport {getPhotos} from './actions';\nimport useInfiniteScroll from './hooks/InfiniteScroll';\n\nconst App = ({history}) => {\n    const location = useLocation();\n    const {search} = location;\n    const filters = QueryString.parse(search);\n\n    const dispatch = useDispatch();\n    const photos = useSelector(store => store.photos);\n    const error = useSelector(store => store.error);\n    const loading = useSelector(store => store.loading);\n    const savedSearches = useSelector(store => store.savedSearches);\n    const completedPhotosList = useSelector(store => store.completedPhotosList);\n\n    const fetchMoreListItems = () => {\n        if (!completedPhotosList && !loading && !error) {\n            setTimeout(() => {\n                const currentPage = parseInt(filters.page);\n                const updatedFilters = {...filters, page: currentPage+1};\n                history.push(`?${QueryString.stringify(updatedFilters)}`);\n                setIsFetching(false);\n            }, 1000);\n        }\n    };\n    const [isFetching, setIsFetching] = useInfiniteScroll(fetchMoreListItems);\n\n    const today = new Date();\n    const initialFilters = {\n        sol: 1000,\n        rover: 'curiosity',\n        page: 1,\n        earth_date: today.toLocaleDateString()\n    };\n\n    const handleClearFilters = () => {\n        history.push(`?${QueryString.stringify(initialFilters)}`);\n    };\n\n    useEffect(() => {\n        if (location.search === '') {\n            history.push(`?${QueryString.stringify(initialFilters)}`);\n        } else {\n            getPhotos(dispatch, filters);\n        }\n    }, [location]);\n\n    return (\n        <section>\n            <Header clearFilters={handleClearFilters} history={history} />\n            <Searchbox savedSearches={savedSearches} history={history}/>\n            {photos.length > 0 && <Photos list={photos}/>}\n            {photos.length === 0 && !error && <Message text=\"No photos found with current filters\"/>}\n            {isFetching && !completedPhotosList && !error && <Loader/>}\n            {photos.length > 0 && completedPhotosList && <Message text=\"No more photos to load\"/>}\n            {error && <Message danger text={error}/>}\n        </section>\n    );\n}\n\nexport default withRouter(App);\n","import {createStore} from 'redux';\nimport Immutable from 'seamless-immutable';\nimport {\n    GET_PHOTOS_SUCCES,\n    GET_PHOTOS_ERROR,\n    GET_PHOTOS_START,\n    SAVE_SEARCH_SUCCESS,\n    CLEAR_ALL_SEARCHES_SUCCESS\n} from '../actiontypes/index';\n\nconst initialState = Immutable({\n    photos: [],\n    completedPhotosList: false,\n    loading: false,\n    savedSearches: JSON.parse(localStorage.getItem('__savedSearches') || '[]')\n});\n\nconst photosStore = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_PHOTOS_SUCCES:\n            let updatedPhotos;\n            if (action.firstPage) {\n                updatedPhotos = action.photos;\n            } else {\n                updatedPhotos = [...state.photos, ...action.photos];\n            }\n            return state.merge({\n                photos: updatedPhotos,\n                completedPhotosList: action.completedPhotosList,\n                loading: false\n            });\n        case GET_PHOTOS_ERROR:\n            return state.merge({\n                error: action.error,\n                loading: false\n            });\n        case GET_PHOTOS_START:\n            return state.merge({\n                loading: false\n            });\n        case SAVE_SEARCH_SUCCESS:\n            const updatedSearches = [...state.savedSearches, action.search];\n            localStorage.setItem('__savedSearches', JSON.stringify(updatedSearches));\n            return state.merge({\n                savedSearches: updatedSearches\n            });\n        case CLEAR_ALL_SEARCHES_SUCCESS:\n            localStorage.removeItem('__savedSearches');\n            return state.merge({\n                savedSearches: []\n            });\n        default:\n            return state;\n    }\n};\n\nconst store = createStore(photosStore);\n\nexport {photosStore as PhotosStore};\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\nimport App from './App';\nimport store from './reducers';\n\nimport './index.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}